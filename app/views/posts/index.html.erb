<h1>Top page</h1>
<%= link_to '新規投稿','/posts/new' %>
<% @posts.each do |post| %>
  <div class="post">
    <div class="post-date">
      投稿日時：<%= post.created_at %>
    </div>
    <div class="post-content">
      <%= post.content %>
    </div>
  </div>
<% end %>



<%# 上記コードは、下記コードを装飾するために、HTMLとCSSの記法を追加%>


<%# <h1>トップページ</h1> %>
<%# <% @posts.each do |post| %> 
  <%# <%= post.content %> 
  <%# <%= post.created_at %> 
<%# <% end %> 





<%# 上記コードは、ERB記法を使用し、eachを記述した。 %>


<%# 下記コードだとエラーが返される。上記の eachメソッドを使う。 %>

<%# <%= @posts.content  %>     
<%# 解説⇨ @postを全て取得したいから@postsにしてみる。RubyコードをHTMLに埋め込む .contentとすることで、特定（今回はcontent）のカラムのみを表示させる(.contentをつけず、@postのみにすると、レコードに紐つく全てのカラムを表示しようとする)。全て一度に取得しようとするとエラーが出てしまう%>
<%# <%= @posts.created_at  %>
<%# 解説⇨ @postを全て取得したいから@postsにしてみる。RubyコードをHTMLに埋め込む .created_atとすることで、特定（今回はcreated_at）のカラムのみを表示させる。全て一度に取得しようとするとエラーが出てしまう%>



<%# @postのデータ全て欲しいから、上記のように@postを@postsにしてみる %>

<%# <%= @post.content  %>
<%# 解説⇨ RubyコードをHTMLに埋め込む .contentとすることで、特定（今回はcontent）のカラムのみを表示させる(.contentをつけず、@postのみにすると、レコードに紐つく全てのカラムを表示しようとする)  %>
<%# <%= @post.created_at  %>
<%# 解説⇨ RubyコードをHTMLに埋め込む .created_atとすることで、特定（今回はcreated_at）のカラムのみを表示させる%>


<% @post %>     <%# # RubyコードをHTMLに埋め込むが表示はされない %>


